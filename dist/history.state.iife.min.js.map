{"version":3,"file":"history.state.iife.min.js","sources":["../source/browser/querystring/parse.js","../source/browser/history/state.js"],"sourcesContent":["import escapeRegExp from '../../common/escape-reg-exp';\n\n/**\n * @name parse\n *\n * @description\n *\n * @api public\n`*/\nexport default function parse(query, sep = '&', eq = '=') {\n\tconst searchParams = {};\n\tconst rule = `([^?${eq}${sep}]+)(${escapeRegExp(eq)}([^${sep}]*))?`;\n\tconst pattern = new RegExp(rule, 'g');\n\tString(query).replace(pattern, ($0, $1, $2, $3) => {\n\t\tsearchParams[$1] = $3;\n\t});\n\treturn searchParams;\n}\n","import * as dispatcher from '../events/polyfill';\nimport parsePath from '../path/parse';\nimport toInt from '../../common/to-int';\nimport is from '../../common/is';\n\nexport const HashChangeEvent = 'hashchange';\nexport const HashChangeHook = `on${HashChangeEvent}`;\nexport const PopStateEvent = 'popstate';\nexport const PopStateHook = `on${PopStateEvent}`;\nexport const ReplaceStateEvent = 'replacestate';\nexport const ChangeStateEvent = 'changestate';\nexport const PushStateEvent = 'pushstate';\n\n/**\n * @name ua\n *\n * @description\n *\n * @private\n`*/\nconst ua = window.navigator.userAgent;\n\n/**\n * @name native\n *\n * @description\n *\n * @api public\n`*/\nexport const native = window.history;\n\n/**\n * @name hasStateList\n *\n * @description\n *\n * @return {Boolean}\n *\n * @see http://caniuse.com/#search=history\n *\n * @api public\n`*/\nexport const hasStateList = 'pushState' in Object(native) &&\n\t!/Android\\s(2\\..+|4\\.0)|Mobile\\sSafari/gi.test(ua) &&\n\t/Windows\\sPhone|Chrome/gi.test(ua)\n;\n\n/**\n * @name updateStateList\n *\n * @description\n *\n * @private\n`*/\nfunction updateStateList(URL, put) {\n\tput(parsePath(URL)); // @TODO: storage\n}\n\n/**\n * @name pushState\n *\n * @description\n *\n * @api public\n`*/\nexport function pushState(state, title, URL) {\n\treturn updateStateList(URL, () => {\n\t\tnative.pushState(state, title, URL);\n\t\tdispatcher.dispatchEvent(window, PushStateEvent, { state, title, URL });\n\t\tdispatcher.dispatchEvent(window, ChangeStateEvent, { state, title, URL });\n\t});\n}\n\n/**\n * @name replaceState\n *\n * @description\n *\n * @api public\n`*/\nexport function replaceState(state, title, URL) {\n\treturn updateStateList(URL, () => {\n\t\tnative.replaceState(state, title, URL);\n\t\tdispatcher.dispatchEvent(window, ReplaceStateEvent, { state, title, URL });\n\t\tdispatcher.dispatchEvent(window, ChangeStateEvent, { state, title, URL });\n\t});\n}\n\n/**\n * @name go\n *\n * @description\n *\n * @api public\n`*/\nexport function go(factor) {\n\treturn native.go(factor);\n}\n\n/**\n * @name forward\n *\n * @description\n *\n * @api public\n`*/\nexport function forward() {\n\treturn native.forward();\n}\n\n/**\n * @name back\n *\n * @description\n *\n * @api public\n`*/\nexport function back() {\n\treturn native.back();\n}\n\n/**\n * @name length\n *\n * @description\n *\n * @api public\n`*/\nexport function length() {\n\treturn toInt(native.length);\n}\n\n/**\n * @name state\n *\n * @description\n *\n * @api public\n`*/\nexport function $state() {\n\tconst info = {};\n\ttry {\n\t\treturn native.state || info;\n\t} catch (err) { return info; }\n}\n\n/**\n * @name title\n *\n * @description\n *\n * @api public\n`*/\nexport function $title(val) {\n\tif (is('Function', val)) {\n\t\tval = val(document.title);\n\t}\n\tif (is('String', val)) {\n\t\tdocument.title = val;\n\t}\n\treturn document.title;\n}\n\n/**\n * @name location\n *\n * @description\n *\n * @api public\n`*/\nexport function location(val) {\n\tif (val) return parsePath(val);\n\treturn parsePath(window.location.href);\n}\n"],"names":[],"mappings":";;;;;;;;+2BAagC,CAAA,ssDCqDH,CAAA,kJAeA,CAAA"}